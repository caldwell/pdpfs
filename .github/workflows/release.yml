name: Release

on:
  push:
    tags: [ "[0-9]*" ]

env:
  PROJECT_NAME: rt11fs
  BIN_NAME: rt11fs
  CARGO_TERM_COLOR: always
  VERSION: ${{ github.ref_name }}

jobs:
  build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3

    - name: Use Nightly Rust
      run: rustup default nightly

    - name: Prepare cross compiler
      run: |
        brew install mingw-w64
        rustup target add x86_64-pc-windows-gnu
        rustup target add aarch64-apple-darwin

    - name: Cache Rust Crates and Objects
      uses: actions/cache@v3
      with:
        key: rust-${{ hashFiles('Cargo.lock') }}
        restore-keys: |
          rust-
        path: |
          ~/.cargo
          ./target

    - name: Run tests
      run: cargo test --verbose

    - name: Build
      run: |
        for bin in $BIN_NAME; do
          cargo build --bin "$bin" --verbose --release
          cargo build --bin "$bin" --verbose --release --target aarch64-apple-darwin
          cargo build --bin "$bin" --verbose --release --target x86_64-pc-windows-gnu
          lipo -create "target/release/$bin" "target/aarch64-apple-darwin/release/$bin" -output target/$bin
        done

    - name: Package
      run: |
        rm -rf ./$PROJECT_NAME-windows-$VERSION ./$PROJECT_NAME-macos-$VERSION ./$PROJECT_NAME-windows-$VERSION.zip ./$PROJECT_NAME-macos-$VERSION.zip
        mkdir ./$PROJECT_NAME-windows-$VERSION ./$PROJECT_NAME-macos-$VERSION
        cp README.md Changelog.md LICENSE.md ./target/x86_64-pc-windows-gnu/release/$BIN_NAME.exe ./$PROJECT_NAME-windows-$VERSION
        cp README.md Changelog.md LICENSE.md ./target/$BIN_NAME                                   ./$PROJECT_NAME-macos-$VERSION
        zip -r $PROJECT_NAME-windows-$VERSION.zip $PROJECT_NAME-windows-$VERSION
        zip -r $PROJECT_NAME-macos-$VERSION.zip   $PROJECT_NAME-macos-$VERSION

    - name: Generate Changelog Snippet
      run: perl -nE 'BEGIN { $v=shift } $p = $v eq $1 if /^# (.*)/; print if $p' "${{ github.ref_name }}" Changelog.md > release.changelog

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        body_path: release.changelog
        token: ${{ secrets.GITHUB_TOKEN }}
        fail_on_unmatched_files: true
        files: |
          ${{ env.PROJECT_NAME }}-windows-${{ env.VERSION }}.zip
          ${{ env.PROJECT_NAME }}-macos-${{ env.VERSION }}.zip
